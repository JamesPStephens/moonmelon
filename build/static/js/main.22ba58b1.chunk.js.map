{"version":3,"sources":["assets/video.mp4","assets/Frame 1.svg","assets/Frame 2.svg","assets/Download_on_the_App_Store_Badge_US-UK_RGB_wht_092917.svg","containers/Landing/styles.js","components/BackgroundVideo/styles.js","containers/Landing/index.jsx","containers/Showcase/styles.js","containers/Showcase/index.jsx","containers/Mission/styles.js","containers/Mission/index.jsx","components/NavigationBar/index.jsx","components/Footer/styles.js","components/Footer/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrapper","styled","div","Landing","Container","fluid","className","Jumbotron","Fade","mountaOnEnter","timeout","in","tag","class","Showcase","src","splash","feed","Mission","iosBadge","NavigationBar","Navbar","fixed","dark","NavbarBrand","href","Footer","Row","Col","md","Date","getFullYear","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kF,y6BCEpC,IAAMC,EAAUC,IAAOC,IAAV,K,8MCAGD,IAAOC,IAAV,KAAb,IC6BQC,EA1BC,WACd,OACE,kBAAC,EAAD,KAEE,kBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,UAAU,6CAEV,kBAACC,EAAA,EAAD,KACE,wBAAID,UAAU,aAAd,aACA,wBAAIA,UAAU,qBAAd,aACA,kBAACE,EAAA,EAAD,CACEC,eAAa,EACbC,QAAS,IACTC,IAAE,EACFC,IAAI,IACJN,UAAU,QAEV,uBAAGO,MAAM,QAAT,+C,6PCrBL,IAAMb,EAAUC,IAAOC,IAAV,K,kCCeLY,EAXE,WACf,OACE,kBAAC,EAAD,KACE,kBAACV,EAAA,EAAD,CAAWE,UAAU,0FACnB,yBAAKS,IAAKC,MACV,yBAAKD,IAAKE,S,gXCTX,IAAMjB,EAAUC,IAAOC,IAAV,KC2BLgB,EAxBC,WACd,OACE,kBAAC,EAAD,KACE,kBAACd,EAAA,EAAD,CAAWE,UAAU,+DACnB,kBAACE,EAAA,EAAD,CACEC,eAAa,EACbC,QAAS,IACTC,IAAE,EACFC,IAAI,KACJN,UAAU,QAEV,sCACA,4EAC+C,6BAD/C,oGAMF,yBAAKS,IAAKI,S,gBCZHC,EARO,WACpB,OACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,MAAMC,MAAI,GACtB,kBAACC,EAAA,EAAD,CAAaC,KAAK,KAAlB,kB,0cCJC,IAAMzB,EAAUC,IAAOC,IAAV,KCkCLwB,EAhCA,WACb,OACE,kBAAC,EAAD,CAAWpB,UAAU,UACnB,kBAACF,EAAA,EAAD,CAAWE,UAAU,gCACnB,kBAACqB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,4BACE,wBAAIvB,UAAU,iBACZ,uBAAGmB,KAAK,MAAR,cAEF,wBAAInB,UAAU,iBACZ,uBAAGmB,KAAK,MAAR,YAEF,wBAAInB,UAAU,iBACZ,uBAAGmB,KAAK,MAAR,uBAMV,yBAAKnB,UAAU,qCACb,kBAACF,EAAA,EAAD,KACE,oCACU,IAAI0B,MAAOC,cADrB,aAC8C,IAC5C,uBAAGN,KAAK,4BAAR,qBCNGO,MAZf,WACE,OACE,yBAAK1B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLc2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.22ba58b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/video.95793bf1.mp4\";","module.exports = __webpack_public_path__ + \"static/media/Frame 1.a967ea2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Frame 2.db841a6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Download_on_the_App_Store_Badge_US-UK_RGB_wht_092917.0f3514a4.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: rgba(18, 18, 18, 1);\n  .container-fluid {\n    height: 100vh !important;\n    color: white;\n    font-style: italic;\n    position: relative;\n    top: 0;\n    left: 0;\n    z-index: 10;\n    background-color: rgba(18, 18, 18, 0.75);\n    .flipped {\n      -moz-transform: scale(1, -1);\n      -webkit-transform: scale(1, -1);\n      -o-transform: scale(1, -1);\n      -ms-transform: scale(1, -1);\n      transform: scale(1, -1);\n      unicode-bidi: bidi-override;\n      direction: rtl;\n    }\n    .lead {\n      font-style: normal;\n    }\n  }\n  .jumbotron {\n    background-color: unset;\n    h1 {\n      color: #c6d65b;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background-size: contain;\n`;\n","import React from 'react';\nimport { Container, Jumbotron, Fade } from 'reactstrap';\nimport * as S from './styles';\nimport BackgroundVideo from '../../components/BackgroundVideo';\n\nconst Landing = () => {\n  return (\n    <S.Wrapper>\n      {/* <BackgroundVideo /> */}\n      <Container\n        fluid\n        className=\"d-flex flex-column justify-content-center\"\n      >\n        <Jumbotron>\n          <h1 className=\"display-3\">moonmelon</h1>\n          <h1 className=\"display-3 flipped\">moonmelon</h1>\n          <Fade\n            mountaOnEnter\n            timeout={300}\n            in\n            tag=\"p\"\n            className=\"mt-3\"\n          >\n            <p class=\"lead\">Creating the worlds biggest nightclub.</p>\n          </Fade>\n        </Jumbotron>\n      </Container>\n    </S.Wrapper>\n  );\n};\n\nexport default Landing;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: rgba(18, 18, 18, 0.75);\n  .showcase_container {\n    height: 75vh !important;\n    overflow: hidden;\n    padding: 12px 12px;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\nimport { Container, Fade } from 'reactstrap';\nimport * as S from './styles';\nimport splash from '../../assets/Frame 1.svg';\nimport feed from '../../assets/Frame 2.svg';\n\nconst Showcase = () => {\n  return (\n    <S.Wrapper>\n      <Container className=\"showcase_container d-flex flex-row flex-wrap align-items-center justify-content-around\">\n        <img src={splash}></img>\n        <img src={feed}></img>\n      </Container>\n    </S.Wrapper>\n  );\n};\n\nexport default Showcase;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: rgba(18, 18, 18, 1);\n  .mission_container {\n    height: 100vh;\n    h1 {\n      color: #c6d65b;\n    }\n    h5 {\n      color: white;\n      margin: 0% 25%;\n      width: 50%;\n      line-height: 140%;\n    }\n    img {\n      margin-top: 16px;\n    }\n  }\n`;\n","import React from 'react';\nimport { Container, Fade } from 'reactstrap';\nimport iosBadge from '../../assets/Download_on_the_App_Store_Badge_US-UK_RGB_wht_092917.svg';\nimport * as S from './styles';\n\nconst Mission = () => {\n  return (\n    <S.Wrapper>\n      <Container className=\"mission_container d-flex flex-column justify-content-center\">\n        <Fade\n          mountaOnEnter\n          timeout={300}\n          in\n          tag=\"h1\"\n          className=\"mt-3\"\n        >\n          <h1>About.</h1>\n          <h5>\n            moonmelon is a nightly based social network. <br /> Our\n            mission is to create a hub of experiences and to\n            physically connect you with those around.\n          </h5>\n        </Fade>\n        <img src={iosBadge} />\n      </Container>\n    </S.Wrapper>\n  );\n};\n\nexport default Mission;\n","import React from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\n\nconst NavigationBar = () => {\n  return (\n    <Navbar fixed=\"top\" dark>\n      <NavbarBrand href=\"/\">moonmelon.io</NavbarBrand>\n    </Navbar>\n  );\n};\n\nexport default NavigationBar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: #35394d;\n  .footer_container {\n    color: white;\n    ul {\n      padding: 0px;\n    }\n    li {\n      padding: 2px 0px;\n      box-sizing: border-box;\n    }\n    a {\n      color: white;\n      text-decoration: none;\n    }\n  }\n  .footer_copyright {\n    color: white;\n    a {\n      color: #c6d65b;\n      text-decoration: none;\n    }\n  }\n`;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport * as S from './styles';\n\nconst Footer = () => {\n  return (\n    <S.Wrapper className=\"shadow\">\n      <Container className=\"footer_container text-center\">\n        <Row>\n          <Col md=\"12\">\n            <ul>\n              <li className=\"list-unstyled\">\n                <a href=\"#!\">Instagram</a>\n              </li>\n              <li className=\"list-unstyled\">\n                <a href=\"#!\">Twitter</a>\n              </li>\n              <li className=\"list-unstyled\">\n                <a href=\"#!\">Privacy Policy</a>\n              </li>\n            </ul>\n          </Col>\n        </Row>\n      </Container>\n      <div className=\"footer_copyright text-center py-3\">\n        <Container>\n          <p>\n            &copy; {new Date().getFullYear()} Copyright{' '}\n            <a href=\"https://www.moonmelon.io\">moonmelon.io</a>\n          </p>\n        </Container>\n      </div>\n    </S.Wrapper>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\n/* Containers */\nimport Landing from './containers/Landing';\nimport Showcase from './containers/Showcase';\nimport Mission from './containers/Mission';\n/* Components */\nimport NavigationBar from './components/NavigationBar';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavigationBar />\n      <Landing />\n      <Showcase />\n      <Mission />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}