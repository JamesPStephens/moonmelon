{"version":3,"sources":["assets/videos/video.mp4","assets/images/Frame 1.svg","assets/images/Frame 2.svg","assets/images/moonmelon.svg","assets/images/Download_on_the_App_Store_Badge_US-UK_RGB_wht_092917.svg","assets/fonts/Arial-Rounded-MT-Bold.ttf","assets/fonts/Arial-Rounded-MT-Thin.ttf","containers/Landing/styles.js","components/BackgroundVideo/styles.js","containers/Landing/index.jsx","containers/Showcase/styles.js","containers/Mission/styles.js","containers/Mission/index.jsx","components/NavigationBar/styles.js","components/NavigationBar/index.jsx","components/Footer/styles.js","components/Footer/index.jsx","containers/Contact/styles.js","containers/Contact/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrapper","styled","div","Landing","Container","fluid","className","Fade","mountaOnEnter","timeout","in","tag","class","Mission","NavigationBar","Navbar","fixed","dark","NavbarBrand","href","src","moon","Footer","Date","getFullYear","Contact","frameborder","allowfullscreen","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,iGCA3CD,EAAOC,QAAU,IAA0B,kF,mBCA3CD,EAAOC,QAAU,IAA0B,mD,mBCA3CD,EAAOC,QAAU,IAA0B,mD,m5BCEpC,IAAMC,EAAUC,IAAOC,IAAV,K,8MCAGD,IAAOC,IAAV,KAAb,ICqBQC,EAlBC,WACd,OACE,kBAAC,EAAD,KAEE,kBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,UAAU,oDAEV,wBAAIA,UAAU,aAAd,aACA,wBAAIA,UAAU,qBAAd,aACA,kBAACC,EAAA,EAAD,CAAMC,eAAa,EAACC,QAAS,IAAKC,IAAE,EAACC,IAAI,IAAIL,UAAU,QACrD,uBAAGM,MAAM,QAAT,8C,6PCdaX,IAAOC,IAAV,K,obCAb,IAAMF,EAAUC,IAAOC,IAAV,KCsBLW,EAnBC,WACd,OACE,kBAAC,EAAD,KACE,kBAACT,EAAA,EAAD,CACEC,OAAK,EACLC,UAAU,+DAEV,qCACA,wBAAIA,UAAU,SAAd,gDAC+C,6BAD/C,sG,2JCXD,IAAMN,EAAUC,IAAOC,IAAV,KCeLY,EAZO,WACpB,OACE,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,MAAMC,MAAI,GACtB,kBAACC,EAAA,EAAD,CAAaC,KAAK,KAChB,yBAAKC,IAAKC,U,wkBCRb,IAAMrB,EAAUC,IAAOC,IAAV,KC6BLoB,EA3BA,WACb,OACE,kBAAC,EAAD,CAAWhB,UAAU,UACnB,kBAACF,EAAA,EAAD,CACEC,OAAK,EACLC,UAAU,8DAEV,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,UACb,uBAAGa,KAAK,IAAR,aACA,uBAAGA,KAAK,KAAR,WACA,uBAAGA,KAAK,6CAAR,aAIF,yBAAKb,UAAU,aACb,oCACU,IAAIiB,MAAOC,cADrB,aAC8C,IAC5C,uBAAGL,KAAK,4BAAR,sB,+cCpBP,IAAMnB,EAAUC,IAAOC,IAAV,KC8BLuB,EA5BC,WACd,OACE,kBAAC,EAAD,KACE,kBAACrB,EAAA,EAAD,CACEC,OAAK,EACLC,UAAU,oDAEV,yBAAKA,UAAU,oEACb,4BACEoB,YAAY,IACZN,IAAI,4NACJO,iBAAe,KAGnB,yBAAKrB,UAAU,qEACb,uCACA,6BACA,yCACA,mDACA,6CACA,yDACA,qDCEKsB,MAbf,WACE,OACE,yBAAKtB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCVcuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2e0d6f96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/video.95793bf1.mp4\";","module.exports = __webpack_public_path__ + \"static/media/Frame 1.a967ea2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Frame 2.db841a6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/moonmelon.a858bb7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Download_on_the_App_Store_Badge_US-UK_RGB_wht_092917.0f3514a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Arial-Rounded-MT-Bold.200135e8.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Arial-Rounded-MT-Thin.9285faec.ttf\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: #35394d;\n  .container-fluid {\n    height: 100vh !important;\n    color: white;\n    font-style: italic;\n    position: relative;\n    top: 0;\n    left: 0;\n    z-index: 10;\n    text-align: center;\n    .display-3 {\n      margin-right: 5%;\n    }\n    h1 {\n      color: #c6d65b;\n      font-size: 3.5rem;\n    }\n    .flipped {\n      -moz-transform: scale(1, -1);\n      -webkit-transform: scale(1, -1);\n      -o-transform: scale(1, -1);\n      -ms-transform: scale(1, -1);\n      transform: scale(1, -1);\n      unicode-bidi: bidi-override;\n      Â direction: rtl;\n      margin-left: 5%;\n    }\n    .lead {\n      font-style: normal;\n      font-family: Rounded-Thin !important;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background-size: contain;\n`;\n","import React from 'react';\nimport { Container, Jumbotron, Fade } from 'reactstrap';\nimport * as S from './styles';\nimport BackgroundVideo from '../../components/BackgroundVideo';\n\nconst Landing = () => {\n  return (\n    <S.Wrapper>\n      {/* <BackgroundVideo /> */}\n      <Container\n        fluid\n        className=\"d-flex flex-column justify-content-center shadow\"\n      >\n        <h1 className=\"display-3\">moonmelon</h1>\n        <h1 className=\"display-3 flipped\">moonmelon</h1>\n        <Fade mountaOnEnter timeout={300} in tag=\"p\" className=\"mt-3\">\n          <p class=\"lead\">Creating the worlds biggest nightclub.</p>\n        </Fade>\n      </Container>\n    </S.Wrapper>\n  );\n};\n\nexport default Landing;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: rgba(18, 18, 18, 0.75);\n  .showcase_container {\n    height: 75vh !important;\n    overflow: hidden;\n    padding: 12px 12px;\n    box-sizing: border-box;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  .mission_container {\n    height: 100vh;\n    text-align: center;\n    background-color: #121212;\n    h1 {\n      color: #c6d65b;\n    }\n    h3 {\n      color: white;\n      line-height: 140%;\n      font-family: Rounded-Thin !important;\n    }\n    img {\n      margin-top: 16px;\n    }\n    hr {\n      background-color: black;\n    }\n  }\n`;\n","import React from 'react';\nimport { Container } from 'reactstrap';\nimport iosBadge from '../../assets/images/Download_on_the_App_Store_Badge_US-UK_RGB_wht_092917.svg';\nimport * as S from './styles';\n\nconst Mission = () => {\n  return (\n    <S.Wrapper>\n      <Container\n        fluid\n        className=\"mission_container d-flex flex-column justify-content-center\"\n      >\n        <h1>About</h1>\n        <h3 className=\"w-100\">\n          moonmelon is a nightly based social network. <br /> Our\n          mission is to create a hub of experiences and to physically\n          connect you with those around.\n        </h3>\n        {/* <img src={iosBadge} /> */}\n      </Container>\n    </S.Wrapper>\n  );\n};\n\nexport default Mission;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  img {\n    width: 35px;\n    height: auto;\n  }\n`;\n","import React from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport moon from '../../assets/images/moonmelon.svg';\nimport * as S from './styles';\n\nconst NavigationBar = () => {\n  return (\n    <S.Wrapper>\n      <Navbar fixed=\"top\" dark>\n        <NavbarBrand href=\"/\">\n          <img src={moon} />\n        </NavbarBrand>\n      </Navbar>\n    </S.Wrapper>\n  );\n};\n\nexport default NavigationBar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: rgba(44, 44, 46);\n  .footer_container {\n    height: 10vh;\n    width: 100%;\n    color: white;\n    a {\n      font-family: Rounded-Thin;\n      color: white;\n      margin: 0 5px;\n      text-decoration: none;\n      box-sizing: border-box;\n    }\n  }\n  .social {\n    margin-bottom: 8px;\n  }\n  .copyright {\n    color: white;\n    font-family: Rounded-Thin;\n    margin-left: 5px;\n    a {\n      font-family: Rounded;\n      color: #c6d65b;\n      text-decoration: none;\n    }\n  }\n`;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport * as S from './styles';\n\nconst Footer = () => {\n  return (\n    <S.Wrapper className=\"shadow\">\n      <Container\n        fluid\n        className=\"footer_container d-flex flex-column justify-content-center\"\n      >\n        <div className=\"d-flex flex-column align-items-center justify-content-center\">\n          <div className=\"social\">\n            <a href=\"\">Instagram</a>\n            <a href=\"#\">Twitter</a>\n            <a href=\"https://linkedin.com/company/moonmelon-io\">\n              Linkedin\n            </a>\n          </div>\n          <div className=\"copyright\">\n            <p>\n              &copy; {new Date().getFullYear()} Copyright{' '}\n              <a href=\"https://www.moonmelon.io\">moonmelon.io</a>\n            </p>\n          </div>\n        </div>\n      </Container>\n    </S.Wrapper>\n  );\n};\n\nexport default Footer;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: #efefef;\n  .container-fluid {\n    height: 60vh !important;\n    color: black;\n    text-align: center;\n    margin: 0;\n    padding: 0;\n    .row {\n      height: 100%;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n    }\n    .information {\n      p {\n        font-family: Rounded-Thin !important;\n        margin: 0;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport * as S from './styles';\n\nconst Contact = () => {\n  return (\n    <S.Wrapper>\n      <Container\n        fluid\n        className=\"d-flex flex-row justify-content-center flex-wrap\"\n      >\n        <div className=\"map shadow flex-grow-1 d-flex flex-column justify-content-center\">\n          <iframe\n            frameborder=\"0\"\n            src=\"https://www.google.com/maps/embed/v1/place?q=place_id:EidBc2hmaWVsZCBTdCwgV2hpdGVjaGFwZWwsIExvbmRvbiBFMSwgVUsiLiosChQKEglNr83t0hx2SBG8UO8TdaltJhIUChIJE0Aq3UoDdkgRIghR0C6uDiY&key=AIzaSyC5ly0ik8q7HUrwLbF90YlkLqVoKFKtP3c\"\n            allowfullscreen\n          />\n        </div>\n        <div className=\"information flex-grow-1 d-flex flex-column justify-content-center\">\n          <h1>Contact</h1>\n          <br />\n          <p>London, UK</p>\n          <p>Ministry Of Startups</p>\n          <p>55 Ashfield St</p>\n          <p>Whitechapel, London E1 2JH</p>\n          <p>hello@moonmelon.io</p>\n        </div>\n      </Container>\n    </S.Wrapper>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport './App.css';\n/* Containers */\nimport Landing from './containers/Landing';\nimport Showcase from './containers/Showcase';\nimport Mission from './containers/Mission';\n/* Components */\nimport NavigationBar from './components/NavigationBar';\nimport Footer from './components/Footer';\n/* Assets */\nimport './assets/fonts/Arial-Rounded-MT-Bold.ttf';\nimport './assets/fonts/Arial-Rounded-MT-Thin.ttf';\nimport Contact from './containers/Contact';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavigationBar />\n      <Landing />\n      {/* <Showcase /> */}\n      <Mission />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}